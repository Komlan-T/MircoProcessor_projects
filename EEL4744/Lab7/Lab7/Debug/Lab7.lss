
Lab7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000384  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000003f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00802000  00802000  000003f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004de1  00000000  00000000  000004c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003d34  00000000  00000000  000052a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000653  00000000  00000000  00008fd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b8  00000000  00000000  00009628  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000042c3  00000000  00000000  000096e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ab  00000000  00000000  0000d9a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000da4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  fc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 100:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 104:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 108:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 10c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 110:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 114:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 118:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 11c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__vector_71>
 120:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 124:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 128:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 12c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 130:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 134:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 138:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 13c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 140:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 144:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 148:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 14c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 150:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 154:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 158:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 15c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 160:	0c 94 9c 01 	jmp	0x338	; 0x338 <__vector_88>
 164:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 168:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 16c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 170:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 174:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 178:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 17c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 180:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 184:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 188:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 18c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 190:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 194:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 198:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 19c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_clear_bss>:
 214:	20 e2       	ldi	r18, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
 21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
 21e:	a6 30       	cpi	r26, 0x06	; 6
 220:	b2 07       	cpc	r27, r18
 222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
 224:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
 228:	0c 94 c0 01 	jmp	0x380	; 0x380 <_exit>

0000022c <__bad_interrupt>:
 22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <tcc0_init>:
uint8_t receive(void)
{
	while(!(USARTD0.STATUS & USART_RXCIF_bm));
	uint8_t save = USARTD0.DATA;
	return save;
}
 230:	88 eb       	ldi	r24, 0xB8	; 184
 232:	9b e0       	ldi	r25, 0x0B	; 11
 234:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x7de826>
 238:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x7de827>
 23c:	83 e0       	ldi	r24, 0x03	; 3
 23e:	80 93 00 08 	sts	0x0800, r24	; 0x800800 <__TEXT_REGION_LENGTH__+0x7de800>
 242:	80 ec       	ldi	r24, 0xC0	; 192
 244:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__TEXT_REGION_LENGTH__+0x7de180>
 248:	08 95       	ret

0000024a <adc_init>:
 24a:	e0 e0       	ldi	r30, 0x00	; 0
 24c:	f2 e0       	ldi	r31, 0x02	; 2
 24e:	80 e1       	ldi	r24, 0x10	; 16
 250:	81 83       	std	Z+1, r24	; 0x01
 252:	80 e3       	ldi	r24, 0x30	; 48
 254:	82 83       	std	Z+2, r24	; 0x02
 256:	82 e0       	ldi	r24, 0x02	; 2
 258:	84 83       	std	Z+4, r24	; 0x04
 25a:	83 e0       	ldi	r24, 0x03	; 3
 25c:	80 a3       	std	Z+32, r24	; 0x20
 25e:	8a e0       	ldi	r24, 0x0A	; 10
 260:	81 a3       	std	Z+33, r24	; 0x21
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	82 a3       	std	Z+34, r24	; 0x22
 266:	83 83       	std	Z+3, r24	; 0x03
 268:	80 83       	st	Z, r24
 26a:	08 95       	ret

0000026c <usartd0_init>:
 26c:	e0 e6       	ldi	r30, 0x60	; 96
 26e:	f6 e0       	ldi	r31, 0x06	; 6
 270:	88 e0       	ldi	r24, 0x08	; 8
 272:	85 83       	std	Z+5, r24	; 0x05
 274:	81 83       	std	Z+1, r24	; 0x01
 276:	84 e0       	ldi	r24, 0x04	; 4
 278:	82 83       	std	Z+2, r24	; 0x02
 27a:	e0 ea       	ldi	r30, 0xA0	; 160
 27c:	f9 e0       	ldi	r31, 0x09	; 9
 27e:	89 e0       	ldi	r24, 0x09	; 9
 280:	86 83       	std	Z+6, r24	; 0x06
 282:	80 e9       	ldi	r24, 0x90	; 144
 284:	87 83       	std	Z+7, r24	; 0x07
 286:	83 e3       	ldi	r24, 0x33	; 51
 288:	85 83       	std	Z+5, r24	; 0x05
 28a:	88 e1       	ldi	r24, 0x18	; 24
 28c:	84 83       	std	Z+4, r24	; 0x04
 28e:	80 e1       	ldi	r24, 0x10	; 16
 290:	83 83       	std	Z+3, r24	; 0x03
 292:	08 95       	ret

00000294 <transmit>:
 294:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7de9a1>
 298:	95 ff       	sbrs	r25, 5
 29a:	fc cf       	rjmp	.-8      	; 0x294 <transmit>
 29c:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7de9a0>
 2a0:	08 95       	ret

000002a2 <main>:
 2a2:	0e 94 25 01 	call	0x24a	; 0x24a <adc_init>
 2a6:	0e 94 18 01 	call	0x230	; 0x230 <tcc0_init>
 2aa:	0e 94 36 01 	call	0x26c	; 0x26c <usartd0_init>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
 2b4:	80 e8       	ldi	r24, 0x80	; 128
 2b6:	8f bf       	out	0x3f, r24	; 63
 2b8:	80 91 01 20 	lds	r24, 0x2001	; 0x802001 <B>
 2bc:	88 23       	and	r24, r24
 2be:	19 f0       	breq	.+6      	; 0x2c6 <main+0x24>
 2c0:	8a e0       	ldi	r24, 0x0A	; 10
 2c2:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <__TEXT_REGION_LENGTH__+0x7de221>
 2c6:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <__DATA_REGION_ORIGIN__>
 2ca:	88 23       	and	r24, r24
 2cc:	19 f0       	breq	.+6      	; 0x2d4 <main+0x32>
 2ce:	88 e2       	ldi	r24, 0x28	; 40
 2d0:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <__TEXT_REGION_LENGTH__+0x7de221>
 2d4:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <glo_flag>
 2d8:	88 23       	and	r24, r24
 2da:	71 f3       	breq	.-36     	; 0x2b8 <main+0x16>
 2dc:	80 91 04 20 	lds	r24, 0x2004	; 0x802004 <var>
 2e0:	90 91 05 20 	lds	r25, 0x2005	; 0x802005 <var+0x1>
 2e4:	89 2f       	mov	r24, r25
 2e6:	0e 94 4a 01 	call	0x294	; 0x294 <transmit>
 2ea:	80 91 04 20 	lds	r24, 0x2004	; 0x802004 <var>
 2ee:	90 91 05 20 	lds	r25, 0x2005	; 0x802005 <var+0x1>
 2f2:	0e 94 4a 01 	call	0x294	; 0x294 <transmit>
 2f6:	10 92 02 20 	sts	0x2002, r1	; 0x802002 <glo_flag>
 2fa:	de cf       	rjmp	.-68     	; 0x2b8 <main+0x16>

000002fc <__vector_71>:

ISR(ADCA_CH0_vect)
{
 2fc:	1f 92       	push	r1
 2fe:	0f 92       	push	r0
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	0f 92       	push	r0
 304:	11 24       	eor	r1, r1
 306:	08 b6       	in	r0, 0x38	; 56
 308:	0f 92       	push	r0
 30a:	18 be       	out	0x38, r1	; 56
 30c:	8f 93       	push	r24
 30e:	9f 93       	push	r25
	var = ADCA.CH0.RES;
 310:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x7de224>
 314:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x7de225>
 318:	80 93 04 20 	sts	0x2004, r24	; 0x802004 <var>
 31c:	90 93 05 20 	sts	0x2005, r25	; 0x802005 <var+0x1>
	glo_flag = 1;
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <glo_flag>
}
 326:	9f 91       	pop	r25
 328:	8f 91       	pop	r24
 32a:	0f 90       	pop	r0
 32c:	08 be       	out	0x38, r0	; 56
 32e:	0f 90       	pop	r0
 330:	0f be       	out	0x3f, r0	; 63
 332:	0f 90       	pop	r0
 334:	1f 90       	pop	r1
 336:	18 95       	reti

00000338 <__vector_88>:

ISR(USARTD0_RXC_vect)
{
 338:	1f 92       	push	r1
 33a:	0f 92       	push	r0
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	0f 92       	push	r0
 340:	11 24       	eor	r1, r1
 342:	08 b6       	in	r0, 0x38	; 56
 344:	0f 92       	push	r0
 346:	18 be       	out	0x38, r1	; 56
 348:	8f 93       	push	r24
	//read = receive();
	read = USARTD0.DATA;
 34a:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7de9a0>
 34e:	80 93 03 20 	sts	0x2003, r24	; 0x802003 <read>
	if(read == 'B')
 352:	80 91 03 20 	lds	r24, 0x2003	; 0x802003 <read>
 356:	82 34       	cpi	r24, 0x42	; 66
 358:	21 f4       	brne	.+8      	; 0x362 <__vector_88+0x2a>
	{
		B = 1;
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	80 93 01 20 	sts	0x2001, r24	; 0x802001 <B>
 360:	07 c0       	rjmp	.+14     	; 0x370 <__vector_88+0x38>
	}
	else if(read == 'F')
 362:	80 91 03 20 	lds	r24, 0x2003	; 0x802003 <read>
 366:	86 34       	cpi	r24, 0x46	; 70
 368:	19 f4       	brne	.+6      	; 0x370 <__vector_88+0x38>
	{
		F = 1;
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <__DATA_REGION_ORIGIN__>
	}
 370:	8f 91       	pop	r24
 372:	0f 90       	pop	r0
 374:	08 be       	out	0x38, r0	; 56
 376:	0f 90       	pop	r0
 378:	0f be       	out	0x3f, r0	; 63
 37a:	0f 90       	pop	r0
 37c:	1f 90       	pop	r1
 37e:	18 95       	reti

00000380 <_exit>:
 380:	f8 94       	cli

00000382 <__stop_program>:
 382:	ff cf       	rjmp	.-2      	; 0x382 <__stop_program>
